// <auto-generated />
using System;
using Borg.Platform.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Borg.Platform.EF.Data.Migrations
{
    [DbContext(typeof(PlatformDb))]
    [Migration("20191225185436_one")]
    partial class one
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.DictionaryState_Id_seq", "'DictionaryState_Id_seq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.Language_Id_seq", "'Language_Id_seq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.Menu_Id_seq", "'Menu_Id_seq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.MenuItem_Id_seq", "'MenuItem_Id_seq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.Page_Id_seq", "'Page_Id_seq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.Tenant_Id_seq", "'Tenant_Id_seq', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borg.Framework.EF.System.Domain.Silos.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR Language_Id_seq");

                    b.Property<string>("TwoLetterISOCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Borg.Framework.EF.System.Domain.Silos.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR Tenant_Id_seq");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Borg.Framework.EF.System.Domain.System.DictionaryState", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("Depth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Descriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hierarchy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<string>("Key")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(2147483647)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id", "TenantId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TenantId");

                    b.ToTable("DictionaryState");
                });

            modelBuilder.Entity("Borg.Framework.EF.System.Domain.System.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<string>("Hierarchy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId");

                    b.ToTable("Entry");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Entry");
                });

            modelBuilder.Entity("Borg.Platform.EF.SystemEntites.Menu", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ActivationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<DateTimeOffset?>("ActiveFrom")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ActiveTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeActivationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentlyActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id", "TenantId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TenantId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Borg.Platform.EF.SystemEntites.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ActivationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<DateTimeOffset?>("ActiveFrom")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ActiveTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeActivationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<int>("Depth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Hierarchy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentlyActive")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Targets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "TenantId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("MenuId")
                        .HasName("FK_Menu_Id");

                    b.HasIndex("TenantId", "LanguageId", "MenuId");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("Borg.Platform.EF.SystemEntites.Page", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ActivationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<DateTimeOffset?>("ActiveFrom")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ActiveTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeActivationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<int>("Depth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("FullSlug")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Hierarchy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasDefaultValue("");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentlyActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id", "TenantId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TenantId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("Borg.Framework.EF.System.Domain.System.Folder", b =>
                {
                    b.HasBaseType("Borg.Framework.EF.System.Domain.System.Entry");

                    b.Property<int?>("FolderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("FolderId");

                    b.HasDiscriminator().HasValue("Folder");
                });

            modelBuilder.Entity("Borg.Framework.EF.System.Domain.System.DictionaryState", b =>
                {
                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Borg.Framework.EF.System.Domain.System.Entry", b =>
                {
                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Borg.Framework.EF.System.Domain.System.Folder", "Parent")
                        .WithMany("Entries")
                        .HasForeignKey("ParentId");

                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Borg.Platform.EF.SystemEntites.Menu", b =>
                {
                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Borg.Platform.EF.SystemEntites.MenuItem", b =>
                {
                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Borg.Platform.EF.SystemEntites.Menu", "Menu")
                        .WithMany("Items")
                        .HasForeignKey("TenantId", "LanguageId", "MenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Borg.Platform.EF.SystemEntites.Page", b =>
                {
                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Borg.Framework.EF.System.Domain.Silos.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Borg.Framework.EF.System.Domain.System.Folder", b =>
                {
                    b.HasOne("Borg.Framework.EF.System.Domain.System.Folder", null)
                        .WithMany("Folders")
                        .HasForeignKey("FolderId");
                });
#pragma warning restore 612, 618
        }
    }
}
